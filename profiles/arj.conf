### Profile for Building Alpine Linux AMIs configured with EFS and CloudWatch Logs support
#
# To build:
#    make PROFILE=arj
#
# To prune images, leaving only the latest AMI for the version eg, 3.10:
#    make prune LEVEL=version PROFILE=arj
#
# vim: ts=2 et:

version-3_10       { include required("version/3.10") }
arch-x86_64        { include required("arch/x86_64") }

# profile vars
alpine {
  # default profile revision is 'r0', reset for each new version release!
  version          = "3.10"
  release          = "3.10.2"
  revision         = "r3"

  ami_name_suffix  = "-arj"
  ami_desc_suffix  = " - https://github.com/ajaquith/alpine-ec2-ami"
  ami_volume_size  = "5"               # Temporary until we know what we really need

  build_region     = "us-east-1"
  build_subnet     = "subnet-d5e34a8d"
  ami_access {
    all            = false             # AMIs are not publicly available
  }
  ami_regions      = null
  ami_regions {
    us-east-1      = true
  }
  repos {                              # Add custom package repo
    "http://alpine-apks.markerbench.com" = "arj"
  }
  alpine_keys      = "http://alpine-apks.markerbench.com/x86_64/alpine-keys-arj-3.9-r0.apk"
  alpine_keys_sha256 = "702fb76b720fea3cad8ae3dc6f8127d5b570c44ff0e1983003fa42d3f106b5a4"
  pkgs {
    "aws-docker@arj" = true
  }
  svcs {
    klogd          = "boot"
    crond          = "default"
  }
  kernel_options {
    "cgroup_enable=memory" = true      # Needed for full Docker cgroup support;
    "swapaccount=1"  = true            # see https://wiki.alpinelinux.org/wiki/Docker
  }

}

# Build definitions
BUILD              = null
BUILDS {
  v3_10-x86_64     = ${version-3_10} ${arch-x86_64} ${alpine}
}
